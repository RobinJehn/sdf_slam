Started off implementing SDF SLAM for two simulated scans.
- Minimising the difference between SDF and scanned points SDF isn't enough because one solution is making the map zero everywhere
- Experimenting with different inital conditions such as amount of noise, points, map init from ground truth, etc.
- Adding points along the scan line with a simple heuristic to determine their desired SDF value. Already thought about more complicated versions of this, but not implemented due to computational complexity. Also try easiest approach first.
- Calculate the Jacobian analytically
- Init map from ground truth
- Adjusting the weight of the scan line vs scan point residuals
- Fix first frame to ground truth
- Move to ceres solver 
- Implement Levenberg-Marquardt
- Interesting observation: Because of the interpolation. If you are in the middle of -1 and 1, your value is 0. The same holds true if you are between -1000 and 1000. So sometimes you get alternating low and high grid values. I assume with |\nabla SDF| = 1 this will be gone. Furthermore I assume that this won't happen if there are multiple points in the same grid cell because they would be closer to one or the other extreme. So reducing grid size should also reduce this problem.
- |\nabla SDF| = 1